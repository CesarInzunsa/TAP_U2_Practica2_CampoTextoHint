
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.Serializable;

/**
 *
 * @author cesar
 */
public class CampoTextoHint extends javax.swing.JPanel implements Serializable{

    String hint = "CampoTextoHint";
    Color color = Color.GRAY;
    
    public enum tipoCampo{
        CADENA, NUMERICO;
    }
    
    private tipoCampo tipo;
    
    public void setTipo(tipoCampo tipo){
        this.tipo = tipo;
    }
    
    public tipoCampo getTipo(){
        return this.tipo;
    }
    
    public void setTipoCampo(tipoCampo tipo){
        this.tipo = tipo;
    }
    
    public tipoCampo getTipoCampo(){
        return tipo;
    }
    
    public void setHint(String texto){
        hint = texto;
        jTextField1.setText(texto);
    }
    
    public String getHint(){
        return hint;
    }
    
    public void setColorTexto(Color color){
        jTextField1.setForeground(color);
    }
    
    public Color getColorTexto(){
        return color;
    }
    
    public CampoTextoHint() {
        initComponents();
        jTextField1.setText(hint);
        
        jTextField1.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (jTextField1.getText().equals(hint)) {
                    jTextField1.setText("");
                    jTextField1.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (jTextField1.getText().isBlank()) {
                    jTextField1.setText(hint);
                    jTextField1.setForeground(Color.GRAY);
                }
            }
        });
        
        jTextField1.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                char tecla = e.getKeyChar();
                if (tipo == tipoCampo.NUMERICO) {
                    if ( ( (tecla<48) || (tecla>57)  ) && (tecla!='\b') ) {
                        e.consume();
                    }
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {

            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();

        jTextField1.setForeground(Color.GRAY);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
